name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '30 18 * * *'
  push:
    # branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  # pull_request:
  #   branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io

  # github.repository as <account>/<repo>
  #IMAGE_NAME: ${{ github.repository }}

  IMAGE_NAME: backplane/testrig
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # for the README this one-liner might be helpful:
        # python -c "import itertools; print('\n'.join(['-'.join(p) for p in itertools.product(['latest', 'v0.6.3'], ['3', '3.6', '3.7', '3.8', '3.9'], ['slim', 'alpine', 'slim-buster', 'alpine3.14'])]))"
        PYTHON_VERSION: ['3', '3.6', '3.7', '3.8', '3.9']
        DISTRO: ['slim', 'alpine', 'slim-buster', 'alpine3.14']

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        # with:
        #   buildkitd-flags: --debug

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=schedule,pattern=nightly
          flavor: |
            latest=auto
            prefix=
            suffix=-${{ matrix.PYTHON_VERSION }}-${{ matrix.DISTRO }},onlatest=true

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: src
          build-args: |
            "PYTAG=${{ matrix.PYTHON_VERSION }}-${{ matrix.DISTRO }}"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
